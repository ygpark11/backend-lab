spring:
  kafka:
    consumer:
      bootstrap-servers: localhost:9092
      group-id: my-group
      # key와 value의 역직렬화(Deserialization) 방식을 지정
      # 메세지 본문을 JSON 형태로 역직렬화
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      # value-deserializer를 ErrorHandlingDeserializer로 변경합니다.
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      # JsonDeserializer에게 어떤 클래스로 변환할지 알려주는 추가 정보
      # 모든 패키지에서 온 JSON을 신뢰하도록 설정 (보안 설정)
      # 만약 특정 패키지만 신뢰하고 싶다면, "*" 대신 "com.example.producer_app.dto"와 같이 패키지명을 지정
      properties:
        spring.json.trusted.packages: "*"
        spring.json.use.type.headers: false # 메시지의 타입 헤더 정보를 사용하지 않음
        # 타입 정보가 없을 때, 기본으로 사용할 클래스를 지정합니다.
        spring.json.value.default.type: com.example.consumer_app.dto.MyMessage # 패키지 경로 포함
        # ErrorHandlingDeserializer에게, 실제 값(value)은 JsonDeserializer로 처리하라고 알려줍니다.
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
    # --- 리스너 에러 처리 설정 추가 ---
    listener:
      # 컨테이너가 직접 에러를 처리하도록 설정
      type: single
      # 모든 재시도에 실패했을 때 메시지를 DLQ로 보냄
      ack-mode: record